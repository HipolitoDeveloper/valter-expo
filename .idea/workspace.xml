<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b4e439a4-e9bd-4ed4-bcb3-ba7e04077f03" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/common/api/reauthentication.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/api/request.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/errors/error.enum.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/errors/http-error.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/permission/type.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/secure-store/keys.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/testing/base-test-setup.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/testing/mock/mock.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/testing/setup-test.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/utils/format-blob-as-json/index.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/utils/is-object/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/utils/is-object/index.unit.test.jsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/common/utils/with-providers.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/hooks/use-profile.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/hooks/use-session.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/jest.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/auth/type.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/user/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/services/user/type.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/components/Screen.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/components/box/styles.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/gluestack-ui-provider/config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/profile/context.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/profile/provider.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/profile/provider.unit.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/session/context.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/session/enum.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/session/provider.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/session/provider.unit.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/providers/session/type.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/screens/access/signin/enum.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/screens/access/signin/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/screens/access/signin/index.unit.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/screens/access/signin/presentational/index.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/ui/screens/access/signin/schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app.json" beforeDir="false" afterPath="$PROJECT_DIR$/app.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/(access)/_layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(access)/_layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/(access)/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/(access)/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/+not-found.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/+not-found.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/_layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/app/_layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/(tabs)/_layout.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/(tabs)/explore.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/(tabs)/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/Collapsible.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/ExternalLink.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/HapticTab.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/HelloWave.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/IconSymbol.ios.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/IconSymbol.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/ParallaxScrollView.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/TabBarBackground.ios.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/TabBarBackground.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/ThemedText.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/backup/scripts/reset-project.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/__tests__/ThemedText-test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/__tests__/__snapshots__/ThemedText-test.tsx.snap" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/common/Screen.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/common/box/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/ui/components/box/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/common/box/styles.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/common/form/input/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/common/form/input/index.unit.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/common/api/config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/providers/gluestack-ui-provider/config.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/providers/gluestack-ui-provider/index.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/ui/providers/gluestack-ui-provider/index.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/providers/gluestack-ui-provider/index.web.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/providers/gluestack-ui-provider/script.ts" beforeDir="false" afterPath="$PROJECT_DIR$/ui/providers/gluestack-ui-provider/script.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/screens/access/signin/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/components/ui/screens/access/signin/index.unit.test.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/common/permission/enum.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/constants/Colors.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gluestack-ui.config.json" beforeDir="false" afterPath="$PROJECT_DIR$/gluestack-ui.config.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/hooks/useColorScheme.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/hooks/useThemeColor.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tailwind.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/tailwind.config.js" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
        <option value="TypeScript JSX File" />
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2uW0Oi0fCPBKUaCaa870G0K1gVx" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Jest.ProfileProvider.executor": "Run",
    "Jest.ProfileProvider.should fetch profile when authenticated and expose context values.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "/Users/hipolito/Projects/valter/valter-expo/hooks",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/hipolito/Projects/valter/valter-expo/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "/Users/hipolito/Projects/valter/valter-expo/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/hooks" />
      <recent name="$PROJECT_DIR$/common" />
      <recent name="$PROJECT_DIR$/ui/providers/session" />
      <recent name="$PROJECT_DIR$/services/user" />
      <recent name="$PROJECT_DIR$/common/errors" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/common/utils" />
      <recent name="$PROJECT_DIR$/common/permission" />
      <recent name="$PROJECT_DIR$/services/auth" />
      <recent name="$PROJECT_DIR$/ui" />
      <recent name="$PROJECT_DIR$/components/ui/common" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.ProfileProvider.should fetch profile when authenticated and expose context values">
    <configuration name="ProfileProvider" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/ui/providers/profile/provider.unit.test.tsx" />
      <test-names>
        <test-name value="ProfileProvider" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="ProfileProvider.should fetch profile when authenticated and expose context values" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/ui/providers/profile/provider.unit.test.tsx" />
      <test-names>
        <test-name value="ProfileProvider" />
        <test-name value="should fetch profile when authenticated and expose context values" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.ProfileProvider.should fetch profile when authenticated and expose context values" />
        <item itemvalue="Jest.ProfileProvider" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-WS-243.23654.120" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b4e439a4-e9bd-4ed4-bcb3-ba7e04077f03" name="Changes" comment="" />
      <created>1742348992385</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1742348992385</updated>
      <workItem from="1742348993665" duration="1343000" />
      <workItem from="1742390878295" duration="13000" />
      <workItem from="1744671279052" duration="2000" />
      <workItem from="1748904434060" duration="2100000" />
      <workItem from="1748998090996" duration="4354000" />
      <workItem from="1749169917477" duration="6046000" />
      <workItem from="1750022474149" duration="17212000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>